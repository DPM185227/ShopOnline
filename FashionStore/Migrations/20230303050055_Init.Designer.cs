// <auto-generated />
using System;
using FashionStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FashionStore.Migrations
{
    [DbContext(typeof(FashionStoreDbContext))]
    [Migration("20230303050055_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FashionStore.Models.Branch", b =>
                {
                    b.Property<string>("IdBranch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_BRANCH");

                    b.Property<string>("CodeDistrict")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CodeProvince")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("LoactionMap")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneBrand")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.HasKey("IdBranch")
                        .HasName("PK__Branch__261C45A4044346CF");

                    b.HasIndex("CodeDistrict");

                    b.HasIndex("CodeProvince");

                    b.ToTable("Branch", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Cart", b =>
                {
                    b.Property<int>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CART");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCart"));

                    b.Property<int?>("Idcolor")
                        .HasColumnType("int")
                        .HasColumnName("IDColor");

                    b.Property<int?>("Idsize")
                        .HasColumnType("int")
                        .HasColumnName("IDSize");

                    b.Property<int?>("QuantityBuy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Quantity_Buy")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdCart")
                        .HasName("PK__Cart__7A1680A501B2F0CB");

                    b.HasIndex("Idcolor");

                    b.HasIndex("Idsize");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Category");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CategoryNameSlug")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CategoryName_Slug");

                    b.Property<string>("Idtype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDType");

                    b.Property<string>("ImageCategory")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<short?>("ViewInFrontEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdCategory")
                        .HasName("PK__Category__6DB3A68A1CF622AE");

                    b.HasIndex("Idtype");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Comment", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_COMMENT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComment"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Folder")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdCustomer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Customer");

                    b.Property<string>("IdPost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_POST");

                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<short?>("StatusComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdComment")
                        .HasName("PK__Comment__E211A5C28703970D");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdProduct");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.CommentRep", b =>
                {
                    b.Property<int>("IdcommentRep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCommentRep");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcommentRep"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Folder")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IdComment")
                        .HasColumnType("int")
                        .HasColumnName("ID_Comment");

                    b.Property<short?>("StatusComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdcommentRep")
                        .HasName("PK__CommentR__F80A9408705B5793");

                    b.HasIndex("IdComment");

                    b.ToTable("CommentRep", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Commune", b =>
                {
                    b.Property<string>("CommuneId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CodeDistrict")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NameCommune")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeCommune")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CommuneId")
                        .HasName("PK__Commune__3E2EBD1240DA38A5");

                    b.HasIndex("CodeDistrict");

                    b.ToTable("Commune", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Customer", b =>
                {
                    b.Property<string>("IdCustomer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Customer");

                    b.Property<DateTime>("CurstomerBirtday")
                        .HasColumnType("datetime");

                    b.Property<string>("CurstomerIdentification")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("CustomerAccountType")
                        .HasColumnType("int");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCustomer")
                        .HasName("PK__Customer__2D8FDE5FDF98FA35");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.District", b =>
                {
                    b.Property<string>("CodeDistrict")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NameDistrict")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProvinceId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TypeDistrict")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CodeDistrict")
                        .HasName("PK__District__7B7C4FA6090B5B2A");

                    b.HasIndex("ProvinceId");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Order", b =>
                {
                    b.Property<string>("Idorder")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDOrder");

                    b.Property<string>("AddressSend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DiscountPrice")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdCustomer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Customer");

                    b.Property<string>("IdStaff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Staff");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ShippingPrice")
                        .HasColumnType("int");

                    b.Property<int?>("TotalAll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TypeOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Idorder")
                        .HasName("PK__Orders__5CBBCADBC4953D86");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdStaff");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FashionStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("IdOrderDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderDetail"));

                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<int?>("Idcolor")
                        .HasColumnType("int")
                        .HasColumnName("IDColor");

                    b.Property<string>("Idorder")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDOrder");

                    b.Property<int?>("Idsize")
                        .HasColumnType("int")
                        .HasColumnName("IDSize");

                    b.Property<int?>("QuantityBuy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Quantity_Buy")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdOrderDetail")
                        .HasName("PK__OrderDet__D8E06C5196DA8AF6");

                    b.HasIndex("IdProduct");

                    b.HasIndex("Idcolor");

                    b.HasIndex("Idorder");

                    b.HasIndex("Idsize");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FashionStore.Models.OrderShipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeDistrict")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CodeProvince")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CommuneId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id")
                        .HasName("PK__OrderShi__3214EC2701838513");

                    b.HasIndex("CodeDistrict");

                    b.HasIndex("CodeProvince");

                    b.HasIndex("CommuneId");

                    b.ToTable("OrderShipping", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Post", b =>
                {
                    b.Property<int>("IdBaiViet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BaiViet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBaiViet"));

                    b.Property<string>("Banner")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdStaff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Staff");

                    b.Property<short?>("StatusPost")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViewPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdBaiViet")
                        .HasName("PK__Post__233A87AC3A8B3207");

                    b.HasIndex("IdStaff");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Product", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<string>("IdBranch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_BRANCH");

                    b.Property<string>("IdCategory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Category");

                    b.Property<string>("IdStaff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Staff");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNameSlug")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<short>("ViewInFrontEnd")
                        .HasColumnType("smallint");

                    b.HasKey("IdProduct")
                        .HasName("PK__Product__69B20C20FD30FFD6");

                    b.HasIndex("IdBranch");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdStaff");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.ProductColor", b =>
                {
                    b.Property<int>("Idcolor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDColor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcolor"));

                    b.Property<short?>("Active")
                        .HasColumnType("smallint");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FolderProductColor")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<string>("ImageColor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idcolor")
                        .HasName("PK__ProductC__E424D936D828D904");

                    b.HasIndex("IdProduct");

                    b.ToTable("ProductColor", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.ProductSize", b =>
                {
                    b.Property<int>("Idsize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSize");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsize"));

                    b.Property<int>("Delta")
                        .HasColumnType("int");

                    b.Property<int?>("Idcolor")
                        .HasColumnType("int")
                        .HasColumnName("IDColor");

                    b.Property<int>("QuanityProduct")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idsize")
                        .HasName("PK__ProductS__C4E3CC40D01FD9C4");

                    b.HasIndex("Idcolor");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.ProductType", b =>
                {
                    b.Property<string>("Idtype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDType");

                    b.Property<string>("ImageType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeNameSlug")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<short?>("ViewInFrontEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Idtype")
                        .HasName("PK__Product___B2733399C49C40FE");

                    b.ToTable("Product_type", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Province", b =>
                {
                    b.Property<string>("CodeProvince")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NameProvince")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeProvince")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CodeProvince")
                        .HasName("PK__Province__5D7010F2C43E0E45");

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.SaleCode", b =>
                {
                    b.Property<int>("IdSaleCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SaleCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSaleCode"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime");

                    b.Property<int?>("MoneyDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime");

                    b.HasKey("IdSaleCode")
                        .HasName("PK__SaleCode__373741C41C6F543F");

                    b.ToTable("SaleCode", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.SaleProductPercent", b =>
                {
                    b.Property<int>("IdSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SALE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSale"));

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime");

                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<int?>("SalePercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime");

                    b.HasKey("IdSale")
                        .HasName("PK__Sale_Pro__E8F6CE85F8C48D01");

                    b.HasIndex("IdProduct");

                    b.ToTable("Sale_Product_Percent", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Staff", b =>
                {
                    b.Property<string>("IdStaff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Staff");

                    b.Property<short?>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("IdBranch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_BRANCH");

                    b.Property<string>("Pass")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<short?>("StaffAccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("StaffAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StaffBirthday")
                        .HasColumnType("datetime");

                    b.Property<string>("StaffIdentification")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("StaffImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StaffPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdStaff")
                        .HasName("PK__Staff__922B8FE65A76F2D5");

                    b.HasIndex("IdBranch");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("FashionStore.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdProduct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCT");

                    b.Property<string>("NameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTagSlug")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Tag__3214EC27770795E5");

                    b.HasIndex("IdProduct");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("FashionStore.Models.Branch", b =>
                {
                    b.HasOne("FashionStore.Models.District", "CodeDistrictNavigation")
                        .WithMany("Branches")
                        .HasForeignKey("CodeDistrict")
                        .IsRequired()
                        .HasConstraintName("FK__Branch__CodeDist__3F466844");

                    b.HasOne("FashionStore.Models.Province", "CodeProvinceNavigation")
                        .WithMany("Branches")
                        .HasForeignKey("CodeProvince")
                        .IsRequired()
                        .HasConstraintName("FK__Branch__CodeProv__3E52440B");

                    b.Navigation("CodeDistrictNavigation");

                    b.Navigation("CodeProvinceNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Cart", b =>
                {
                    b.HasOne("FashionStore.Models.ProductColor", "IdcolorNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("Idcolor")
                        .HasConstraintName("FK_Cart_Color");

                    b.HasOne("FashionStore.Models.ProductSize", "IdsizeNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("Idsize")
                        .HasConstraintName("FK_Cart_Size");

                    b.Navigation("IdcolorNavigation");

                    b.Navigation("IdsizeNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Category", b =>
                {
                    b.HasOne("FashionStore.Models.ProductType", "IdtypeNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("Idtype")
                        .HasConstraintName("FK_PRODUCTTYPE_Category");

                    b.Navigation("IdtypeNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Comment", b =>
                {
                    b.HasOne("FashionStore.Models.Customer", "IdCustomerNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK_COMMENT_CUSTOMER");

                    b.HasOne("FashionStore.Models.Product", "IdProductNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_POST_COMMENT");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.CommentRep", b =>
                {
                    b.HasOne("FashionStore.Models.Comment", "IdCommentNavigation")
                        .WithMany("CommentReps")
                        .HasForeignKey("IdComment")
                        .HasConstraintName("FK_Comment_CommentRep");

                    b.Navigation("IdCommentNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Commune", b =>
                {
                    b.HasOne("FashionStore.Models.District", "CodeDistrictNavigation")
                        .WithMany("Communes")
                        .HasForeignKey("CodeDistrict")
                        .HasConstraintName("FK_Commune_District");

                    b.Navigation("CodeDistrictNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.District", b =>
                {
                    b.HasOne("FashionStore.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_District_Province");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("FashionStore.Models.Order", b =>
                {
                    b.HasOne("FashionStore.Models.Customer", "IdCustomerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK_ORDERS_CUSTOMER");

                    b.HasOne("FashionStore.Models.Staff", "IdStaffNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdStaff")
                        .HasConstraintName("FK_Orders_STAFF");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdStaffNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.OrderDetail", b =>
                {
                    b.HasOne("FashionStore.Models.Product", "IdProductNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Product_OrderDetail");

                    b.HasOne("FashionStore.Models.ProductColor", "IdcolorNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Idcolor")
                        .HasConstraintName("FK_Color_OrderDetail");

                    b.HasOne("FashionStore.Models.Order", "IdorderNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Idorder")
                        .HasConstraintName("FK_ORDER_ORDERDETAIL");

                    b.HasOne("FashionStore.Models.ProductSize", "IdsizeNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Idsize")
                        .HasConstraintName("FK_Size_OrderDetail");

                    b.Navigation("IdProductNavigation");

                    b.Navigation("IdcolorNavigation");

                    b.Navigation("IdorderNavigation");

                    b.Navigation("IdsizeNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.OrderShipping", b =>
                {
                    b.HasOne("FashionStore.Models.District", "CodeDistrictNavigation")
                        .WithMany("OrderShippings")
                        .HasForeignKey("CodeDistrict")
                        .IsRequired()
                        .HasConstraintName("FK_ORDERSHIPPING_QH");

                    b.HasOne("FashionStore.Models.Province", "CodeProvinceNavigation")
                        .WithMany("OrderShippings")
                        .HasForeignKey("CodeProvince")
                        .IsRequired()
                        .HasConstraintName("FK_ORDERSHIPPING_TP");

                    b.HasOne("FashionStore.Models.Commune", "Commune")
                        .WithMany("OrderShippings")
                        .HasForeignKey("CommuneId")
                        .IsRequired()
                        .HasConstraintName("FK_ORDERSHIPPING_XA");

                    b.Navigation("CodeDistrictNavigation");

                    b.Navigation("CodeProvinceNavigation");

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("FashionStore.Models.Post", b =>
                {
                    b.HasOne("FashionStore.Models.Staff", "IdStaffNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("IdStaff")
                        .HasConstraintName("FK_POST_STAFF");

                    b.Navigation("IdStaffNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Product", b =>
                {
                    b.HasOne("FashionStore.Models.Branch", "IdBranchNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdBranch")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_BRAND");

                    b.HasOne("FashionStore.Models.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK_PRODUCT_CATEGORY");

                    b.HasOne("FashionStore.Models.Staff", "IdStaffNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdStaff")
                        .HasConstraintName("FK_PRODUCT_STAFF");

                    b.Navigation("IdBranchNavigation");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdStaffNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.ProductColor", b =>
                {
                    b.HasOne("FashionStore.Models.Product", "IdProductNavigation")
                        .WithMany("ProductColors")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Product_Color");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.ProductSize", b =>
                {
                    b.HasOne("FashionStore.Models.ProductColor", "IdcolorNavigation")
                        .WithMany("ProductSizes")
                        .HasForeignKey("Idcolor")
                        .HasConstraintName("FK_Size_Color");

                    b.Navigation("IdcolorNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.SaleProductPercent", b =>
                {
                    b.HasOne("FashionStore.Models.Product", "IdProductNavigation")
                        .WithMany("SaleProductPercents")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Product_SALE");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Staff", b =>
                {
                    b.HasOne("FashionStore.Models.Branch", "IdBranchNavigation")
                        .WithMany("Staff")
                        .HasForeignKey("IdBranch")
                        .IsRequired()
                        .HasConstraintName("FK_STAFF_BRAND");

                    b.Navigation("IdBranchNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Tag", b =>
                {
                    b.HasOne("FashionStore.Models.Product", "IdProductNavigation")
                        .WithMany("Tags")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Product_TAG");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("FashionStore.Models.Branch", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("FashionStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FashionStore.Models.Comment", b =>
                {
                    b.Navigation("CommentReps");
                });

            modelBuilder.Entity("FashionStore.Models.Commune", b =>
                {
                    b.Navigation("OrderShippings");
                });

            modelBuilder.Entity("FashionStore.Models.Customer", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FashionStore.Models.District", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Communes");

                    b.Navigation("OrderShippings");
                });

            modelBuilder.Entity("FashionStore.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FashionStore.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductColors");

                    b.Navigation("SaleProductPercents");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("FashionStore.Models.ProductColor", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("FashionStore.Models.ProductSize", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FashionStore.Models.ProductType", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("FashionStore.Models.Province", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Districts");

                    b.Navigation("OrderShippings");
                });

            modelBuilder.Entity("FashionStore.Models.Staff", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Posts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
